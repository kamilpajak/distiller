; PlatformIO Project Configuration File for Distiller
; Automated distillation control system for Arduino MKR WiFi 1010

[platformio]
; Default environments to build/upload when no -e option is given
default_envs = prod
; Custom scripts for compilation database generation
extra_scripts =
    scripts/generate_compile_commands.py
; Global packages
packages =
    tool-clang-format @ 15.0.7

; Common settings for all environments
[env]
; Static analysis configuration
check_tool = clangtidy
check_flags =
    clangtidy: --config-file=.clang-tidy
check_src_filters = +<src/**> +<include/**> +<test/**> +<lib/**>
check_skip_packages = yes

; Production environment for Arduino MKR WiFi 1010
; Note: Arduino SAMD21 is limited to C++11 despite the C++23 flag
[env:prod]
platform = atmelsam
board = mkrwifi1010
framework = arduino
; Serial monitor settings
monitor_speed = 9600
monitor_filters = send_on_enter, colorize, time
; Build settings
build_flags =
    -std=c++11
    -DARDUINO_SAMD_MKR
    -I lib/hardware_abstractions/include
    -I lib/process_controllers/include
    -I lib/utilities/include
    -I lib/mocks/include
    ; Framework paths
    -I /root/.platformio/packages/framework-arduino-samd/libraries/SD/src
    -I /root/.platformio/packages/framework-arduino-samd/libraries/SPI/src
    ; Simple debug flag for now
    -DDEBUG
build_unflags = -std=gnu++11
; Library dependencies
lib_deps =
    bogde/HX711@^0.7.5
    milesburton/DallasTemperature@^3.11.0
    br3ttb/PID@^1.2.1
    duinowitchery/hd44780@^1.3.2
    tcmenu/TaskManagerIO@^1.4.3
    arduino-libraries/SD@^1.2.4
; Upload settings
upload_speed = 115200
upload_protocol = sam-ba
; Debug settings
debug_tool = jlink
debug_init_break = tbreak setup

; Debug variant of production environment (with build output options)
[env:prod_debug]
extends = env:prod
build_type = debug
build_flags =
    -std=c++11
    -DARDUINO_SAMD_MKR
    -I lib/hardware_abstractions/include
    -I lib/process_controllers/include
    -I lib/utilities/include
    -DDEBUG
    -g3
    -ggdb3
    -Og
upload_speed = 115200
upload_protocol = sam-ba

; Native environment for local development
[env:native]
platform = native
; Build settings - can use C++23 on native platform
build_flags =
    -std=c++23
    -DNATIVE
    -I lib/hardware_abstractions/include
    -I lib/process_controllers/include
    -I lib/utilities/include
    -I lib/mocks/include
build_unflags = -std=gnu++11
; Library dependencies
lib_deps =
    google/googletest@1.15.2

; Test environment for unit testing
; Note: Tests can use C++23 since they run on the native platform
[env:test]
platform = native
; Build settings
build_flags =
    -std=c++23
    -DUNIT_TEST
    -DNATIVE
    -I test
    -I src
    -I include
    -I lib/hardware_abstractions/include
    -I lib/process_controllers/include
    -I lib/utilities/include
    -I lib/mocks/include
    -I .pio/libdeps/test/DallasTemperature/src
    -I .pio/libdeps/test/OneWire
    -I .pio/libdeps/test/TaskManagerIO/src/
build_unflags = -std=gnu++11
; Library dependencies
lib_deps =
    google/googletest@1.15.2
    bogde/HX711@^0.7.5
    milesburton/DallasTemperature@^3.11.0
    br3ttb/PID@^1.2.1
    duinowitchery/hd44780@^1.3.2
    tcmenu/TaskManagerIO@^1.4.3
    paulstoffregen/OneWire@^2.3.7
; Test framework configuration
test_framework = googletest
test_build_src = true
; Explicitly include specific implementation files that are required for the tests
build_src_filter = +<src/*.cpp> +<src/*.h> -<src/main.cpp> +<lib/**/src/*.cpp> +<lib/**/src/*.h>

; CI environment for continuous integration
[env:ci]
platform = native
; Build settings
build_flags =
    -std=c++23
    -DUNIT_TEST
    -DNATIVE
    -I test
    -I src
    -I include
    -I lib/hardware_abstractions/include
    -I lib/process_controllers/include
    -I lib/utilities/include
    -I lib/mocks/include
    -I .pio/libdeps/ci/DallasTemperature/src
    -I .pio/libdeps/ci/OneWire
    -I .pio/libdeps/ci/TaskManagerIO/src/
build_unflags = -std=gnu++11
; Library dependencies
lib_deps =
    google/googletest@1.15.2
    bogde/HX711@^0.7.5
    milesburton/DallasTemperature@^3.11.0
    br3ttb/PID@^1.2.1
    duinowitchery/hd44780@^1.3.2
    tcmenu/TaskManagerIO@^1.4.3
    paulstoffregen/OneWire@^2.3.7
; Test framework configuration
test_framework = googletest
test_build_src = true
; Explicitly include specific implementation files that are required for the tests
build_src_filter = +<src/*.cpp> +<src/*.h> -<src/main.cpp> +<lib/**/src/*.cpp> +<lib/**/src/*.h>
; Static analysis configuration - stricter for CI
check_flags =
    clangtidy: --config-file=.clang-tidy --warnings-as-errors=*